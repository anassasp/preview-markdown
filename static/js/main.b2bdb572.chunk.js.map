{"version":3,"sources":["logo.svg","index.js"],"names":["placeholder","logo","marked","setOptions","breaks","gfm","renderer","Renderer","Menubar","props","className","title","Editor","onChange","text","Preview","dangerouslySetInnerHTML","__html","id","App","state","input","handleChange","bind","event","this","setState","target","value","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAAe,MAA0B,iC,eCMnCA,EAAW,2kCA0CDC,EA1CC,OA6CjBC,IAAOC,WAAW,CAChBC,QAAQ,EACRC,KAAK,IAGP,IAAMC,EAAW,IAAIJ,IAAOK,SAEtBC,EAAU,SAACC,GACf,OACE,sBAAKC,UAAU,UAAf,UACE,8BAAG,wCAAkBD,EAAME,SAC3B,2CAKAC,EAAS,SAACH,GACd,OACE,0BAAUC,UAAU,cAAcG,SAAUJ,EAAMI,SAAlD,SAA6DJ,EAAMK,QAIjEC,EAAU,SAAAN,GACd,OACE,qBACEO,wBAAyB,CACvBC,OAAQf,IAAOO,EAAMK,KAAM,CAAER,SAAUA,KAEzCI,UAAU,eAAeQ,GAAG,aAK5BC,E,kDACJ,WAAYV,GAAO,IAAD,8BAChB,cAAMA,IACDW,MAAQ,CACXC,MAAOrB,GAET,EAAKsB,aAAe,EAAKA,aAAaC,KAAlB,gBALJ,E,gDAQlB,SAAaC,GACXC,KAAKC,SAAS,CACZL,MAAOG,EAAMG,OAAOC,U,oBAKxB,WACE,OACE,sBAAKlB,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,gCACA,sBAAKA,UAAU,mBAAf,UACE,cAAC,EAAD,CAASC,MAAQ,WACjB,cAAC,EAAD,CAAQG,KAAQW,KAAKL,MAAMC,MAAOR,SAAUY,KAAKH,kBAGnD,sBAAKZ,UAAU,oBAAf,UACE,cAAC,EAAD,CAASC,MAAQ,YACjB,cAAC,EAAD,CAASG,KAAQW,KAAKL,MAAMC,kB,GA3BpBQ,IAAMC,WAmCxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b2bdb572.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport marked from \"marked\";\nimport logo from './logo.svg';\nimport './App.css';\n\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo](${logo})\n`;\n\nmarked.setOptions({\n  breaks: true,\n  gfm: true\n});\n\nconst renderer = new marked.Renderer();\n\nconst Menubar = (props) => {\n  return(\n    <div className=\"menubar\">\n      <p><span>Logo</span>{props.title}</p>\n      <button>X</button>\n    </div>\n  )\n}\n\nconst Editor = (props) => {\n  return (\n    <textarea className=\"text editor\" onChange={props.onChange}>{props.text}</textarea>\n  )\n}\n\nconst Preview = props => {\n  return (\n    <div\n      dangerouslySetInnerHTML={{\n        __html: marked(props.text, { renderer: renderer })\n      }}\n      className=\"text preview\" id=\"preview\"\n    />\n  );\n};\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      input: placeholder,\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event){\n    this.setState({\n      input: event.target.value,\n    })\n    \n  }\n\n  render(){\n    return (\n      <div className=\"wrapper\">\n        <h1 className=\"title\">Markdown Previewer</h1>\n        <div className=\"container editor\">\n          <Menubar title = 'Editor' />\n          <Editor text = {this.state.input} onChange={this.handleChange} />\n        </div>\n\n        <div className=\"container preview\">\n          <Menubar title = 'Preview' />\n          <Preview text = {this.state.input} />\n        </div>\n      </div>\n    );\n  }\n}\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}